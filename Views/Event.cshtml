@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Event>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
	Layout = "master.cshtml";
}

<h1>
@Model.Value("eventTitle")
</h1>

<br>

<p>
@Model.Value("eventDescription", fallback: Fallback.ToAncestors)
</p>
<p>
@Model.Value("eventDate", fallback: Fallback.ToAncestors)
</p>

<h2>Speakers </h2>

  
    
    

     
     

<p>Located at:</p>
@{
    IPublishedContent location = Model.Value<IPublishedContent>("location");
        if (location!=null)
        {  <p>
                @location.Name - 
                @location.Value("City") 
                     
                </p>
          }
     }
@{
    var itemz = Model.Value<IEnumerable<IPublishedElement>>("speaker");
     foreach (var item in itemz)
     {
        // Render your content, e.g. item.Value<string>("heading")
        //item.Value<string>("firstName")item.firstName
       <p> @item.Value<string>("firstName") </p>
     }
    }

@{
	var selection = Umbraco.Content(Guid.Parse("c73f09a7-8a98-442e-8175-c22713bd4fb4"))
    .ChildrenOfType("event")
    .Where(x => x.IsVisible());
}
<ul>
	@foreach (var item in selection)
	{
		<li>
			<a href="@item.Url">@item.Name</a>
		</li>
	}
</ul>

